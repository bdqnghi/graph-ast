<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit_kind><comment>// Java program for implementation of Bubble Sort </comment>
<class>class <name>BubbleSort<position></position></name> 
<block>{ 
	<function><type><name>void<position></position></name></type> <name>bubbleSort<position></position></name><parameter_list>(<parameter><decl><type><name>int<position></position></name></type> <name><name>arr<position></position></name><index>[]<position></position></index></name></decl></parameter>)<position></position></parameter_list> 
	<block>{ 
		<decl_stmt><decl><type><name>int<position></position></name></type> <name>n<position></position></name> <init>= <expr><name><name>arr<position></position></name><operator>.<position></position></operator><name>length<position></position></name></name></expr></init></decl>;<position></position></decl_stmt> 
		<for>for <control>(<init><decl><type><name>int<position></position></name></type> <name>i<position></position></name> <init>= <expr><literal type="number">0<position></position></literal></expr></init></decl>;<position></position></init> <condition><expr><name>i<position></position></name> <operator>&lt;<position></position></operator> <name>n<position></position></name><operator>-<position></position></operator><literal type="number">1<position></position></literal></expr>;<position></position></condition> <incr><expr><name>i<position></position></name><operator>++<position></position></operator></expr></incr>)<position></position></control> 
			<block><for>for <control>(<init><decl><type><name>int<position></position></name></type> <name>j<position></position></name> <init>= <expr><literal type="number">0<position></position></literal></expr></init></decl>;<position></position></init> <condition><expr><name>j<position></position></name> <operator>&lt;<position></position></operator> <name>n<position></position></name><operator>-<position></position></operator><name>i<position></position></name><operator>-<position></position></operator><literal type="number">1<position></position></literal></expr>;<position></position></condition> <incr><expr><name>j<position></position></name><operator>++<position></position></operator></expr></incr>)<position></position></control> 
				<block><if>if <condition>(<expr><name><name>arr<position></position></name><index>[<expr><name>j<position></position></name></expr>]<position></position></index></name> <operator>&gt;<position></position></operator> <name><name>arr<position></position></name><index>[<expr><name>j<position></position></name><operator>+<position></position></operator><literal type="number">1<position></position></literal></expr>]<position></position></index></name></expr>)<position></position></condition><then> 
				<block>{ 
					<comment>// swap arr[j+1] and arr[i] </comment>
					<decl_stmt><decl><type><name>int<position></position></name></type> <name>temp<position></position></name> <init>= <expr><name><name>arr<position></position></name><index>[<expr><name>j<position></position></name></expr>]<position></position></index></name></expr></init></decl>;<position></position></decl_stmt> 
					<expr_stmt><expr><name><name>arr<position></position></name><index>[<expr><name>j<position></position></name></expr>]<position></position></index></name> <operator>=<position></position></operator> <name><name>arr<position></position></name><index>[<expr><name>j<position></position></name><operator>+<position></position></operator><literal type="number">1<position></position></literal></expr>]<position></position></index></name></expr>;<position></position></expr_stmt> 
					<expr_stmt><expr><name><name>arr<position></position></name><index>[<expr><name>j<position></position></name><operator>+<position></position></operator><literal type="number">1<position></position></literal></expr>]<position></position></index></name> <operator>=<position></position></operator> <name>temp<position></position></name></expr>;<position></position></expr_stmt> 
				}<position></position></block></then></if></block></for></block></for> 
	}<position></position></block></function> 

	<comment>/* Prints the array */</comment>
	<function><type><name>void<position></position></name></type> <name>printArray<position></position></name><parameter_list>(<parameter><decl><type><name>int<position></position></name></type> <name><name>arr<position></position></name><index>[]<position></position></index></name></decl></parameter>)<position></position></parameter_list> 
	<block>{ 
		<decl_stmt><decl><type><name>int<position></position></name></type> <name>n<position></position></name> <init>= <expr><name><name>arr<position></position></name><operator>.<position></position></operator><name>length<position></position></name></name></expr></init></decl>;<position></position></decl_stmt> 
		<for>for <control>(<init><decl><type><name>int<position></position></name></type> <name>i<position></position></name><init>=<expr><literal type="number">0<position></position></literal></expr></init></decl>;<position></position></init> <condition><expr><name>i<position></position></name><operator>&lt;<position></position></operator><name>n<position></position></name></expr>;<position></position></condition> <incr><expr><operator>++<position></position></operator><name>i<position></position></name></expr></incr>)<position></position></control> 
			<block><expr_stmt><expr><call><name><name>System<position></position></name><operator>.<position></position></operator><name>out<position></position></name><operator>.<position></position></operator><name>print<position></position></name></name><argument_list>(<argument><expr><name><name>arr<position></position></name><index>[<expr><name>i<position></position></name></expr>]<position></position></index></name> <operator>+<position></position></operator> <literal type="string">" "<position></position></literal></expr></argument>)<position></position></argument_list></call></expr>;<position></position></expr_stmt></block></for> 
		<expr_stmt><expr><call><name><name>System<position></position></name><operator>.<position></position></operator><name>out<position></position></name><operator>.<position></position></operator><name>println<position></position></name></name><argument_list>()<position></position></argument_list></call></expr>;<position></position></expr_stmt> 
	}<position></position></block></function> 

	<comment>// Driver method to test above </comment>
	<function><specifier>public<position></position></specifier> <specifier>static<position></position></specifier> <type><name>void<position></position></name></type> <name>main<position></position></name><parameter_list>(<parameter><decl><type><name>String<position></position></name></type> <name><name>args<position></position></name><index>[]<position></position></index></name></decl></parameter>)<position></position></parameter_list> 
	<block>{ 
		<decl_stmt><decl><type><name>BubbleSort<position></position></name></type> <name>ob<position></position></name> <init>= <expr><operator>new<position></position></operator> <call><name>BubbleSort<position></position></name><argument_list>()<position></position></argument_list></call></expr></init></decl>;<position></position></decl_stmt> 
		<decl_stmt><decl><type><name>int<position></position></name></type> <name><name>arr<position></position></name><index>[]<position></position></index></name> <init>= <expr><block>{<expr><literal type="number">64<position></position></literal></expr>, <expr><literal type="number">34<position></position></literal></expr>, <expr><literal type="number">25<position></position></literal></expr>, <expr><literal type="number">12<position></position></literal></expr>, <expr><literal type="number">22<position></position></literal></expr>, <expr><literal type="number">11<position></position></literal></expr>, <expr><literal type="number">90<position></position></literal></expr>}<position></position></block></expr></init></decl>;<position></position></decl_stmt> 
		<expr_stmt><expr><call><name><name>ob<position></position></name><operator>.<position></position></operator><name>bubbleSort<position></position></name></name><argument_list>(<argument><expr><name>arr<position></position></name></expr></argument>)<position></position></argument_list></call></expr>;<position></position></expr_stmt> 
		<expr_stmt><expr><call><name><name>System<position></position></name><operator>.<position></position></operator><name>out<position></position></name><operator>.<position></position></operator><name>println<position></position></name></name><argument_list>(<argument><expr><literal type="string">"Sorted array"<position></position></literal></expr></argument>)<position></position></argument_list></call></expr>;<position></position></expr_stmt> 
		<expr_stmt><expr><call><name><name>ob<position></position></name><operator>.<position></position></operator><name>printArray<position></position></name></name><argument_list>(<argument><expr><name>arr<position></position></name></expr></argument>)<position></position></argument_list></call></expr>;<position></position></expr_stmt> 
	}<position></position></block></function> 
}<position></position></block></class> 
<comment>/* This code is contributed by Rajat Mishra */</comment>
</unit_kind>